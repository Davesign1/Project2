/*!
 *  BMWUSA 
 *  Name: api-service 
 * 
 */!function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}__webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module.default}:function getModuleExports(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="/etc/designs/bmwusa/bmwusa-clientlibs/",__webpack_require__(__webpack_require__.s=5)}({"./frontend_src/components/api-service/js/api-service.js":function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;const ApiService={config:{apiUrl:null,legacyApiUrl:null,legacyDealerLocator:!1,subscriptionString:"ApiService"},setSubscriptions(){PubSub.subscribe(this.config.subscriptionString,(type,data)=>{const methodPath=type.replace(ApiService.config.subscriptionString+".","").split("."),object=methodPath[0],method=methodPath[1];ApiService[object]&&ApiService[object][method]&&ApiService[object][method](data)})},init(){this.config.apiUrl=document.body.dataset.apiUrl?document.body.dataset.apiUrl+"/bin/dealerLocatorServlet":"https://bmwusa-awsint-u1.bmwusa-int.us-east-1.bmw.cloud/bin/dealerLocatorServlet",this.config.legacyDealerLocator=document.body.dataset.legacyDealerLocator||!1,this.config.legacyApiUrl="/bin/services/",this.setSubscriptions()},get(url,onSuccess,onError){const xhr=window.XMLHttpRequest?new XMLHttpRequest:new ActiveXObject("Microsoft.XMLHTTP");return xhr.open("GET",url),xhr.onreadystatechange=()=>{4==xhr.readyState&&200==xhr.status&&onSuccess?onSuccess(JSON.parse(xhr.response)):onError&&4==xhr.readyState&&onError(xhr.response)},xhr.send(),xhr},UserLocation:{getUserLocation({zipCode,lat,lng,onSuccess=null,onError=null}={}){let url=ApiService.config.apiUrl+"userlocation/";zipCode?url+=zipCode:lat&&lng&&(url+=lat+"/"+lng),ApiService.get(url,onSuccess,onError)}},DealerLocator:{getMaco({zipCode,onSuccess=null,onError=null}={}){const url=ApiService.config.apiUrl+"maco/"+zipCode;ApiService.get(url,onSuccess,onError)},getDealers({zipCode,radius,page,macoCode=null,serviceType=null,onSuccess=null,onError=null}={}){let url;ApiService.config.legacyDealerLocator?(url=ApiService.config.legacyApiUrl,url+=serviceType?"forms-dealers":"dealersdetails",url+="?zipCode="+zipCode,page&&(url+="&page="+page),macoCode&&(url+="&macoCode="+macoCode),radius&&(url+="&radius="+radius),serviceType&&(url+="&serviceType="+serviceType)):(url=ApiService.config.apiUrl+zipCode,radius&&(url+="/"+radius),serviceType&&(url+="/"+serviceType)),ApiService.get(url,onSuccess,onError)},getDealersByMaco({zipCode,macoCode,onSuccess=null,onError=null}={}){let url;url=ApiService.config.legacyDealerLocator?ApiService.config.legacyApiUrl+"maco?zipCode="+zipCode+"&macoCode="+macoCode:ApiService.config.apiUrl+"maco/"+macoCode+"/"+zipCode,ApiService.get(url,onSuccess,onError)},getDealersByCenterId({centerId,locationId,onSuccess=null,onError=null}={}){const url=ApiService.config.apiUrl+"center/"+centerId+"/"+locationId;ApiService.get(url,onSuccess,onError)},getDealersByLocation({stateCode,city,radius,onSuccess=null,onError=null}={}){let url;url=ApiService.config.legacyDealerLocator?ApiService.config.legacyApiUrl+"dealersdetails?stateCode="+zipCode+"&city="+macoCode:ApiService.config.apiUrl+"geo/"+stateCode+"/"+radius+"?city="+city,ApiService.get(url,onSuccess,onError)},getDealersByCoordinates({lat,lng,radius,onSuccess=null,onError=null}={}){const url=ApiService.config.apiUrl+"geo/"+radius+"?lat="+lat+"&lon="+lng;ApiService.get(url,onSuccess,onError)}}};try{ApiService.init()}catch(e){console.error("Failed to initialize ApiService",e)}var _default=ApiService;exports.default=_default,module.exports=exports.default},5:function(module,exports,__webpack_require__){module.exports=__webpack_require__("./frontend_src/components/api-service/js/api-service.js")}});
//# sourceMappingURL=/etc/designs/bmwusa/bmwusa-clientlibs/bmwusa-sourcemaps/bmwusa-api-service-203902800b3faaf5f071.js.map